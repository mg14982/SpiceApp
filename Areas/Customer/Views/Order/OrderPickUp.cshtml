@model Spice.Models.ViewModel.OrderListViewModel
@using Spice.Utility
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<form method="get">
    <br />
    <br />
    <h2 class="text-info">Order Ready for Pickup</h2>
    <div class="border backgroundWhite">
        <div class="container border border-secondary" style="height:60px;">
            <div class="col-12">
                <div class="row container">
                    <div class="col-11">
                        <div class="row" style="padding-top:10px;">
                            <div class="col-4">
                                @Html.Editor("searchName", new { htmlAttributes = new { @class = "form-control", @placeholder = "Name....." } })
                            </div>
                            <div class="col-4">
                                @Html.Editor("searchPhone", new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone....." } })
                            </div>
                            <div class="col-4">
                                @Html.Editor("searchEmail", new { htmlAttributes = new { @class = "form-control", @placeholder = "Email....." } })
                            </div>
                        </div>
                    </div>
                    <div class="col-1">
                        <div class="row" style="padding-top:10px;">
                            <button type="submit" name="submit" value="search" class="btn btn-info form-control">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            @*<div class="col-6 text-info text-right">
                <partial name="_CreateButtonPartial" />
            </div>*@
        </div>
        <br />
        <div>
            @if (Model.Orders.Count() > 0)
            {
                <table class="table table-striped border">
                    <tr class="table-secondary">
                        <th>
                            @Html.DisplayNameFor(model => model.Orders[0].OrderHeader.Id)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Orders[0].OrderHeader.PickupaName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Orders[0].OrderHeader.ApplicationUser.Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Orders[0].OrderHeader.PickupTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Orders[0].OrderHeader.OrderTotal)
                        </th>
                        <th>
                            Total Items
                        </th>
                        <th></th>
                    </tr>
                    @foreach (var item in Model.Orders)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(model => item.OrderHeader.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.OrderHeader.PickupaName)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.OrderHeader.ApplicationUser.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.OrderHeader.PickupTime)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.OrderHeader.OrderTotal)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.OrderDetails.Count)
                            </td>
                            <td>
                                <div class="col-12">
                                    <button type="button" class="btn btn-sm  btn-info anchorDetails" data-id="@item.OrderHeader.Id" data-toggle="modal">
                                        <i class="fas fa-list-alt"></i>&nbsp;Details
                                    </button>
                                    @if (item.OrderHeader.Status.Equals(SD.OrderStatusReady) && (User.IsInRole(SD.ManagerUser) || User.IsInRole(SD.FrontDeskUser)))
                                    {
                                            <button id="btnReady" class="btn btn-sm btn-success form-control justify-content-lg-start" data-id="@item.OrderHeader.Id" style="width:60%">Ready to Pickup</button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </table>
                <div page-model="@Model.PageInfo"
                     page-classes-enabled="true"
                     page-class="btn border"
                     page-class-normal="btn btn-light"
                     page-class-selected="btn btn-info active"
                     class="btn-group float-right">
                </div>
                <br />
            }
            else
            {
                <span class="text-danger">
                    Orders not exists
                </span>
            }

        </div>
    </div>

</form>

<div class="modal" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog-centered modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-success text-light justify-content-center">
                <h5 class="modal-title">Order Details</h5>
            </div>
            <div class="modal-body justify-content-center" id="modalContent">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            $('.anchorDetails').click(function () {
                var buttonClicked = $(this);
                var id = buttonClicked.attr("data-id");
                //alert(id);
                $.ajax({
                    url: '/Customer/Cart/GetOrderDetails',
                    contentType: "application/json;",
                    type: "GET",
                    data: { "Id": id },
                    cache: false,
                    dataType: "json",
                    success: function (data) {
                        //alert(data);
                        $('#modalContent').html(data);
                        $("#myModal").modal('show');
                    },
                    error: function (err) {
                        $('#modalContent').html(JSON.stringify(err));
                        $("#myModal").modal('show');
                        //alert('error in downloading order details' + JSON.stringify(err));
                    }
                })
            });

            $('#btnReady').click(function () {
                var buttonClicked = $(this);
                var id = buttonClicked.attr("data-id");
                $.ajax({
                    url: '/Customer/Order/OrderPickUpPost',
                    contentType: "application/json;",
                    type: "GET",
                    data: { "OrderId": id },
                    cache: false,
                    dataType: "json",
                    success: function (data) {
                        console.log('success');
                    },
                    error: function (err) {
                        alert('error in order pickup ready' + JSON.stringify(err));
                    }
                });
                window.location.href = '/Customer/Order/OrderPickUp';
            });
        });
    </script>
}
